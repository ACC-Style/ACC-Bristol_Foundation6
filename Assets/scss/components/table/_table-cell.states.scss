// This code is just for dependency this is to help maintain the project but doesn't produce any css.
$required-SCSS_states: "false" !default;
$required_data:(
	'bool' :$required-SCSS_states,
	'required':'__states.required.scss',
	'path':'scss/base/__states.required.scss',
	'file':'_collapsable-panel.states.scss'
	);
@include required-check($required_data...);
// End of required check
/**
* Table States:
* `td.state or tr.state` - quickly color table cells or rows with the states then need to have. 
* 
*   @example
*	<table class="table">
*		<tr>
*			<td class="error icon"><i class="fa fa-holder"></i></td>
*			<td class="error">Error</td>
*			<td class="warning"><i class="fa fa-holder"></i> Warning</td>
*		</tr>
*		<tr>
*			<td class="error icon"><i class="fa fa-holder"></i></td>
*			<td class="error">Error</td>
*			<td class="alert">alert</td>
*		</tr>
*		<tr>
*			<td class="error icon"><i class="fa fa-holder"></i></td>
*			<td class="success">Success</td>
*			<td class="highlighted"><i class="fa fa-holder"></i> Info</td>
*		</tr>
*		<tr>
*			<td class="error icon"><i class="fa fa-holder"></i></td>
*			<td class="complete"><i class="fa fa-holder"></i> Complete</td>
*			<td class="info"><i class="fa fa-holder"></i> Highlighted</td>
*		</tr>
*		<tr class="error">
*			<td class="error icon"><i class="fa fa-holder"></i></td>
*			<td class="">Cell Data in Error Row</td>
*			<td class="">Cell Data</td>
*		</tr>
*	</table>
*/
%icon-cell{
		padding: .25rem .25rem .25rem .25rem;
		text-align: center;
		vertical-align: middle;
		width:1%;
		i{margin: 0 auto;}
	}
// $icon-dark-text:$global-default-dark-text;
// $icon-light-text:$global-default-light-text;

// @mixin icon-cell-color($selector,$var,$bg){
	
// 	.table td#{$selector}{
// 		@extend %icon-cell;
// 		background-color:rgba($bg,.35);
// 		color:color-contrast(color($bg,25),$icon-dark-text,$icon-light-text);
// 		.fa-holder:before{content:$var;}
// 		tr.disabled &{background-color: grey(30); color:grey(5);}
// 	}
// 	.stripped,.banded{}	
// 		tr:nth-child(even) td#{$selector}{
// 			background-color:rgba($bg,.5);
// 		}
// 		tr.disabled:nth-child(even) td#{$selector}{
// 			background-color: grey(35);color:grey(5);
// 		}

// }
// @include icon-cell-color('.note',$fa-var-file-text,$primary-color);
// @include icon-cell-color('.data',$fa-var-cog,grey(50));
// @include icon-cell-color('.success',$fa-var-check,$success-color);
// @include icon-cell-color('.error',$fa-var-exclamation-circle,$error-red);
// @include icon-cell-color('.alert',$fa-var-exclamation-triangle,$warning-orange);

@each $State in $states{
	$cell-color: map-get($State,"Color");
	$cell-color-shift:rgba($cell-color,.5);
	$selector:map-get($State,"Selector");
	td.icon{
		@extend %icon-cell;
	}
	td#{$selector},tr#{$selector} td{
		background-color:$cell-color;
		color:color-contrast($cell-color);
	}
	tr:nth-child(even) td#{$selector},tr:nth-child(even)#{$selector} td{
		background-color:$cell-color;
		color:color-contrast($cell-color);
	}
}
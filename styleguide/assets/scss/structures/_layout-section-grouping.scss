%shadedbackground {
    background-image:url('../img/billie-holiday-lite.png');
}
%dropshoadowedbox{-webkit-box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.2);
    -moz-box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.2);
    box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.2);}
%liftedbox {
    border: 1px solid grey(15);
    background-color: white;
    @extend %dropshoadowedbox;
    margin:0 5px 3px;
    
}
%ghostbox {
    border: 2px dashed grey(25);
    background-color:transparent;
    // background-color: grey(15);
    background-image: url('../img/empty_stripe_grey@2x.png');
    -webkit-box-shadow: inset 0px 1px 6px 3px rgba(230, 230, 230, .2);
    -moz-box-shadow: inset 0px 1px 6px 3px rgba(230, 230, 230, .2);
    box-shadow: inset 0px 1px 6px 3px rgba(230, 230, 230, .2);
}

.with-group-sections,.paper-page{
    @extend %shadedbackground;
    @if $brand-level < 2{  
        .overlap .tabs .selected,.overlap .tabs .is-active{
            @extend %shadedbackground;
        }
    }
    @each $State in $states{
        $state-selector:map-get($State,'Selector'); 
        &#{$state-selector},&#{$state-selector} .overlap .tabs .selected,&#{$state-selector} .overlap .tabs .is-active{
                background-color:color(map-get($State,'Color'), 25);
                background-image:url('../img/billie-holiday-speck.png');
            }
        @if $brand-level >= 2{    
            &#{$state-selector} .overlap .tabs .selected,&#{$state-selector} .overlap .tabs .is-active{
                background:map-get($State,'Color');
                a{color:color-contrast(map-get($State,'Color'));}
             }
         }
    }
    .overlap + .page-wrapper{
        padding-top:.5rem;
    }
    .page-wrapper {
        @extend %page-padding-vertical-only; 
        // align sections and rows with in the page
        > .section, > section, > .row {
            @extend %content-padding-horizontal;
        }
        .group-section,.card {
            width: auto;
            position: relative;
            @extend %liftedbox;
            @extend %content-padding-vertical;
            @extend %content-padding-horizontal;
            
        }
        .group-section.ghost,.card.ghost{
            @extend %ghostbox;
            border-radius: $global-border-radius;
            

        }
        @each $State in $states{
                 $state-selector:map-get($State,'Selector');
                 &#{$state-selector}{
                    .group-section.ghost,.card.ghost{
                        background-color:mix(color(map-get($State,'Color'), 25),grey(15));
                    }
                 }
            }
    }
}

.colored-paper{  
    @extend %spacing-transition;
    @extend %content-padding-vertical;
    @extend %content-padding-horizontal;
    @extend %content-expanding-margin-horizontal;
    
    h1,h2,h3,h4,h5,h6,p{color:color-contrast(rebrand-color($primary-color, 1));}
    &.secondary{h1,h2,h3,h4,h5,h6,p{color: color-contrast( $secondary-color);}}
    background-image: url('../img/construction-paper.png');
    background-color: rebrand-color($primary-color, 1);
    @each $State in $states{
        $state-selector:map-get($State,'Selector'); 
        &#{$state-selector}{
            background-color:map-get($State,'Color');
            color:color-contrast(map-get($State,'Color'));
            h1,h2,h3,h4,h5,h6,p,{ color:color-contrast(map-get($State,'Color') );}
         }
    }
    @each $State in $states{
        $state-selector:map-get($State,'Selector'); 
        &#{$state-selector} .tabs li{
            background-color: color(map-get($State,'Color'), 20);
             &:hover{ background-color: color(map-get($State,'Color'), 35);}
         }
    }
    .card.ghost &,.group-section.ghost{
        background-image: url('../img/construction_paper_grey.png');
        border-radius:$global-border-radius * 1.25 !important;
        margin:0 !important;

    }
    .tabs {
        @extend %content-expanding-margin-bottom;
        border:0 none;
        background-color: transparent;
        li {
            border-radius: .4em;
            display: inline-block;
            margin: .4em .05em .3em;
            vertical-align: bottom;
            background-color: color(rebrand-color($primary-color, 1), 20);
            padding:.2em .3em;
            &:hover{ 
                background-color: color(rebrand-color($primary-color, 1), 35);
            }
            &.selected,&:hover.selected  {
                border-radius: .5em;
                border-bottom-right-radius: 0px;
                border-bottom-left-radius: 0px;
                margin-bottom: 0;
                vertical-align: bottom;
                padding: .4em;
                background-color: #fff;
            }
        }
    }

   
}
.group-section .colored-paper:last-child,.card .colored-paper:last-child {
    @extend %content-expanding-margin-bottom;
}
.group-section .colored-paper:first-child ,.card .colored-paper:first-child {
    @extend %content-expanding-margin-top;
}

.radius.group-section .colored-paper:first-child ,.radius.card .colored-paper:first-child,.radius.group-section .colored-paper:last-child,.radius.card .colored-paper:last-child {border-radius: $global-border-radius;}
.radius-bottom.group-section .colored-paper:last-child,.radius-bottom.card .colored-paper:last-child {border-radius:  0 0 $global-border-radius  $global-border-radius;}
.radius-top.group-section .colored-paper:first-child ,.radius-top.card .colored-paper:first-child {border-radius: $global-border-radius  $global-border-radius 0 0;}


/**
* Paper Cards:
* `.page.paper-page .page-wrapper .card` - by default pages are white but when the need arises to have grouped section 'cards' are introduced and the background area becomes a layer of soft off white construction paper. If the need arises to highlight a collection of cards add `.highlighted` to the `.page.with-group-sections` and the product color will bleed into the construction paper.
* 
*   @example
*   <div class="page paper-page">
*    <div class="page-wrapper">
*    <section class="section card"><h1>Hello</h1> <p>This is content  that is showing up in a section group</p></section>
*    </div>
*    </div>
*   <div class="page paper-page error">
*    <div class="page-wrapper">
*       <section class="section card">
*           <h1>.Page.Paper-Page.Error</h1>
*       </section>
*    </div></div>
*   <div class="page paper-page highlighted">
*    <div class="page-wrapper">
*       <section class="section card">
*           <h1>.Page.Paper-Page.Highlighted</h1>
*       </section>
*    </div>
*    </div>
*
**/
/**
* Ghost Cards:
* `card.ghost` - Ghosted cards are used as holder for an upcoming or locked section. When you want to show a section that will become editable or expanded but don't want it to pop in ghost is a good design pattern to use.
* 
*   @example
*   <div class="page paper-page">
*    <div class="page-wrapper">
*    <section class="section card"><h1>Hello I am a ghost</h1> <p>This is content  that is showing up in a section group</p></section>
*    </div>
*    </div>
*   <div class="page paper-page error">
*    <div class="page-wrapper">
*       <section class="section card ghost"><div class="error colored-paper">Colored Paper is Effected by Ghosting</div>
*           <h1>.Page.Paper-Page.Error .Card.Ghost</h1>
*       </section>
*    </div></div>
*
**/
/**
* Tabs on Paper Pages:
* `.page.paper-page  > .overlap >.tabs` - Tabs placed outside of cards are used to change all cards under the tabs.  This pattern is used for sub page toggling.
* 
*   @example
*   <div class="page paper-page">
*     <nav class="overlap"><ul class="tabs">
*     <li class="icon"><a class="home"><i class="fa fa-holder"></i></a></li>
*     <li class=""><a>Tab 2</a></li>
*     <li class="selected"><a >Tab 3</a></li>
*     <li class=""><a >Tab 4</a></li>
*     </ul></nav>
*     <div class="page-wrapper">
*     <section class="section group-section radius"><h1>Hello</h1> <p>This is content  that is showing up in a section group</p></section>
*        </div>
*    </div>
*
**/
/**
* Tabs on Paper Pages with States:
* `.page.paper-page  > .overlap >.tabs` - Tabs placed outside of cards are used to change all cards under the tabs.  This pattern is used for sub page toggling.
* 
*   @example
*   <div class="page paper-page warning">
*     <nav class="overlap"><ul class="tabs">
*     <li class="icon"><a class="home"><i class="fa fa-holder"></i></a></li>
*     <li class=""><a>Tab 2</a></li>
*     <li class="selected"><a >Tab 3</a></li>
*     <li class=""><a >Tab 4</a></li>
*     </ul></nav>
*     <div class="page-wrapper">
*     <section class="section group-section radius"><h1>Hello</h1> <p>This is content  that is showing up in a section group</p></section>
*        </div>
*    </div>
*   <div class="page paper-page error">
*     <nav class="overlap"><ul class="tabs">
*     <li class="icon"><a class="home"><i class="fa fa-holder"></i></a></li>
*     <li class=""><a>Tab 2</a></li>
*     <li class="selected"><a >Tab 3</a></li>
*     <li class=""><a >Tab 4</a></li>
*     </ul></nav>
*     <div class="page-wrapper">
*     <section class="section group-section radius"><h1>Hello</h1> <p>This is content  that is showing up in a section group</p></section>
*        </div>
*    </div>
*
**/
/**
* Tabs for Paper Cards:
* `.page.paper-page  .card .colored-paper .nav.tabs` - Special tabs holders are introduced to the cards so they can fill the full frame of the card. `.color-paper` is a container that wraps Tabs.This pattern should be used to toggle content on a single card or area of a card.
* 
*   @example
*   <div class="page paper-page">
*       <div class="page-wrapper">
*            <section class="section card">
*                <div class="colored-paper">
*                    <nav><ul class="nav tabs">
*                        <li class="">
*                       <a>Tab 1</a>
*                       </li>
*                        <li class=" selected "> <a>Tab 2</a> </li>
*                        <li class=""> <a>Tab 3</a> </li>
*                    </ul></nav>
*                </div>
*                <h1>Hello</h1> 
*                <p>This is content  that is showing up in a section group</p>
*                <div class="colored-paper info">
*                    <nav><ul class="nav tabs">
*                        <li class="">
*                       <a>Tab 1</a>
*                       </li>
*                        <li class=" selected "> <a>Tab 2</a> </li>
*                        <li class=""> <a>Tab 3</a> </li>
*                    </ul></nav>
*                </div>
*                <h2>I am Sub Tab Content</h2> 
*                <p>This is content under a secondary tab in a card</p>
*            </section>
*        </div>
*    </div>
**/
/**
* Content in Colored paper:
* `.page.paper-page  .card .color-paper *` - Content can be written into colored paper but it is limited to basic contnet like headers and paragraph tags.  
* 
*   @example
*   <div class="page paper-page">
*       <div class="page-wrapper">
*            <section class="section card">
*                <div class="colored-paper">
*                   <h2>I am Content inside of a colored paper</h2> 
*                   <p>This is a "p" tag inside of colored paper</p>
*                </div>
*            </section>
*        </div>
*    </div>
*
**/
/**
* Content in Colored paper:
* `.color-paper.[state]` - Colored paper can be colored with states to change it from its base color which is the product color.  
* 
*   @example
*   <div class="page paper-page">
*       <div class="page-wrapper">
*        <div class="row">
*            <div class="medium-4 columns">
*                <div class="card">
*                    <div class="colored-paper warning"><h3 class="text-center">Warning State</h3></div>
*                </div>
*            </div>
*            <div class="medium-4 columns">
*                <div class="card">
*                    <div class="colored-paper info"><h3 class="text-center">Info State</h3></div>
*                </div>
*            </div>
*            <div class="medium-4 columns">
*                <div class="card">
*                    <div class="colored-paper error"><h3 class="text-center">Error State</h3></div>
*                </div>
*            </div>
*        </div>
*        </div>
*    </div>
*
**/
/**
* Paper Card Rounded Corners:
* `.card.radius` - Using the Utility Class of radius you can round the corners of cards.  Just add "radius" "radius-top" "radius-bottom"
* 
*   @example
*   <div class="page with-group-sections">
*    <div class="page-wrapper">
*        <div class="row">
*            <div class="medium-4 columns">
*                <div class="card radius-top">
*                    <div class="colored-paper"><h3 class="text-center">radius-top</h3></div>
*                      <p>colored paper also gets the rounded corners set by the card</p>
*                </div>
*            </div>
*            <div class="medium-4 columns">
*                <div class="card radius">
*                    <h3 class="text-center">radius</h3>
*                </div>
*            </div>
*            <div class="medium-4 columns">
*                <div class="card radius-bottom">
*                    <h3 class="text-center">radius-bottom</h3>
*                    <div class="colored-paper"><h3 class="text-center">colored paper</h3></div>
*                </div>
*            </div>
*        </div>
*    </div>
*    </div>
*
**/





